<?xml version="1.0" encoding="UTF-8"?><testrun name="(default package)" project="Project1" tests="17" started="17" failures="0" errors="4" ignored="0">
  <testsuite name="ParserTest" time="0.03">
    <testcase name="testInitializeComponents" classname="ParserTest" time="0.03"/>
  </testsuite>
  <testsuite name="myHashTableTest" time="0.02">
    <testcase name="testHashing" classname="myHashTableTest" time="0.007">
      <error>java.lang.NullPointerException: Cannot invoke "Handle.getSize()" because "test.values[2]" is null&#13;
	at myHashTableTest.testHashing(myHashTableTest.java:26)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at student.testingsupport.junit4.RunTestMethodWrapper.evaluate(RunTestMethodWrapper.java:74)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)&#13;
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)&#13;
	at java.base/java.lang.Thread.run(Thread.java:833)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testHashingCalculation" classname="myHashTableTest" time="0.002"/>
    <testcase name="testInsert" classname="myHashTableTest" time="0.003">
      <error>java.lang.NullPointerException: Cannot invoke "Handle.getSize()" because "test.values[t]" is null&#13;
	at myHashTableTest.testInsert(myHashTableTest.java:65)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at student.testingsupport.junit4.RunTestMethodWrapper.evaluate(RunTestMethodWrapper.java:74)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)&#13;
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)&#13;
	at java.base/java.lang.Thread.run(Thread.java:833)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testDelete" classname="myHashTableTest" time="0.003">
      <error>java.lang.NullPointerException: Cannot invoke "Handle.getKey()" because "this.values[MyHashTable.calculateFirstHashing(int, int)]" is null&#13;
	at MyHashTable.delete(MyHashTable.java:249)&#13;
	at myHashTableTest.testDelete(myHashTableTest.java:116)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at student.testingsupport.junit4.RunTestMethodWrapper.evaluate(RunTestMethodWrapper.java:74)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)&#13;
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)&#13;
	at java.base/java.lang.Thread.run(Thread.java:833)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSearch" classname="myHashTableTest" time="0.002">
      <error>java.lang.NullPointerException: Cannot invoke "Handle.getKey()" because "this.values[MyHashTable.calculateFirstHashing(int, int)]" is null&#13;
	at MyHashTable.search(MyHashTable.java:178)&#13;
	at myHashTableTest.testSearch(myHashTableTest.java:178)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at student.testingsupport.junit4.RunTestMethodWrapper.evaluate(RunTestMethodWrapper.java:74)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)&#13;
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)&#13;
	at java.base/java.lang.Thread.run(Thread.java:833)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testPrint" classname="myHashTableTest" time="0.003"/>
  </testsuite>
  <testsuite name="SemManagerTest" time="0.024">
    <testcase name="testMInitx" classname="SemManagerTest" time="0.003"/>
    <testcase name="testPrintSemManager" classname="SemManagerTest" time="0.004"/>
    <testcase name="testdoublesize" classname="SemManagerTest" time="0.003"/>
    <testcase name="testFindSpaceAvailable" classname="SemManagerTest" time="0.002"/>
    <testcase name="testgetNearestPowerOfTwo" classname="SemManagerTest" time="0.002"/>
    <testcase name="testsplitMemoryPool" classname="SemManagerTest" time="0.006"/>
    <testcase name="testdelete" classname="SemManagerTest" time="0.002"/>
    <testcase name="testdetectMerge" classname="SemManagerTest" time="0.001"/>
  </testsuite>
  <testsuite name="SeminarTest" time="0.005">
    <testcase name="testtoString" classname="SeminarTest" time="0.003"/>
    <testcase name="testSeminarDS" classname="SeminarTest" time="0.002"/>
  </testsuite>
</testrun>
