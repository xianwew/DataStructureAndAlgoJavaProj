import static org.junit.Assert.assertTrue;
public class myHashTableTest {

    private MyHashTable hashTable;
    private Handle[] insertArr;
    
    void setUp() {
    	hashTable = new MyHashTable(1024);
        insertArr = new Handle[50];
    }

    void testHashingWithIgnoreLastElementIndex() {
        boolean result = hashTable.hashing(123, new Handle(-1, -1, -1), insertArr, true);
        assertTrue(result);
    }

    void testHashingWithoutIgnoreLastElementIndex() {
        boolean result = hashTable.hashing(123, new Handle(-1, -1, -1), insertArr, false);
        assertTrue(result);
    }

    void testHashingWithCollision() {
        assertTrue(hashTable.hashing(123, new Handle(-1, -1, -1), insertArr, false));
        assertTrue(hashTable.hashing(456, new Handle(-1, -1, -1), insertArr, false));
    }

    void testReHash() {
        int arrSize = insertArr.length;
        for (int i = 0; i < arrSize / 2; i++) {
            assertTrue(hashTable.hashing(i, new Handle(-1, -1, -1), insertArr, false));
        }
        assertTrue(hashTable.hashing(arrSize / 2, new Handle(-1, -1, -1), insertArr, false));
    }
}
