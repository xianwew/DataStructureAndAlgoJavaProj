
/**
 * {Project Description Here}
 */

/**
 * The class containing the main method.
 *
 * @author {Your Name Here}
 * @version {Put Something Here}
 */

// On my honor:
// - I have not used source code obtained from another current or
//   former student, or any other unauthorized source, either
//   modified or unmodified.
//
// - All source code and documentation used in my program is
//   either my original work, or was derived by me from the
//   source code published in the textbook for this course.
//
// - I have not discussed coding details about this project with
//   anyone other than my partner (in the case of a joint
//   submission), instructor, ACM/UPE tutors or the TAs assigned
//   to this course. I understand that I may discuss the concepts
//   of this program with other students, and that another student
//   may help me debug my program so long as neither of us writes
//   anything during the discussion or modifies any computer file
//   during the discussion. I have violated neither the spirit nor
//   letter of this restriction.

import java.io.*;
import java.util.Scanner;

public class SemManager {
    /**
     * @param args
     *     Command line parameters
     */
    public static void main(String[] args) {
        // This is the main file for the program.
        Seminar dum = new Seminar();
        try{
        	int i = Integer.parseInt(args[2]);
        }
        catch(Exception e) {
        	System.out.println("Error in creating memory pool!");
            e.printStackTrace();
        }
        Seminar[] memoryPool = new Seminar[Integer.parseInt(args[2])];
        try{
        	int i = Integer.parseInt(args[3]);
        }
        catch(Exception e) {
        	System.out.println("Error in creating memory pool!");
            e.printStackTrace();
        }
        MyHashTable[] hashTable = new MyHashTable(Integer.parseInt(args[3]));
        
        //System.out.println(args[4]);
        try{
            File newObj = new File(args[4]);
            Scanner Reader = new Scanner(newObj);
            while (Reader.hasNextLine()) {
              String data = Reader.nextLine();
              //System.out.println(data);
            }
            Reader.close();
        } 
    	catch (FileNotFoundException e) {
            System.out.println("Error in reading files!");
            e.printStackTrace();
    	}

        
        
        
    }

}
